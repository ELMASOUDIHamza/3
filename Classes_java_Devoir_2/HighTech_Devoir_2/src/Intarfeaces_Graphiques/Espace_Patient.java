/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Intarfeaces_Graphiques;

import Class_Created.Doctor;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.DateFormat;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JLabel;
import javax.swing.JOptionPane;

/**
 *
 * @author hamza
 */
public class Espace_Patient extends javax.swing.JFrame {
        Connection cnx;
        private  PreparedStatement ps ;
        private int rdv;
        static ResultSet rs;
        ArrayList<Doctor> doctors = new ArrayList();
        Doctor d ;
        private int compteur=0;
        Login_Interface li = new Login_Interface();
        
    /**
     * Creates new form Espace_Patient
     */
    public Espace_Patient() {
        initComponents();
//        label_patient_national_code.setText(Login_Interface.rs_patient.getString("national_code"));
        panel_patient_rdv.setVisible(false);
   //     cb_patient_choix_doct.setEnabled(true);
        label_patient_national_code.setText("TEST");
                    try {
                cnx = DriverManager.getConnection("jdbc:mysql://localhost:3306/java_hightech_devoir_2","hightech","HIGHTECH2022");
              //  JOptionPane.showMessageDialog(this, "Database est correctement connéctée !");
                
                        
           //  cb_patient_choix_doct.setEnabled(true);
             
    /*         ps = cnx.prepareStatement("SELECT employment_code , last_name, first_name FROM DOCTOR d, USER u where d.national_code=u.national_code");
             rs = ps.executeQuery();
             while (rs.next()) {                
                d = new Doctor(rs.getString("employment_code"), rs.getString("last_name"), rs.getString("first_name"));
                doctors.add(d);
                cb_patient_choix_doct.addItem(d.display_infos_for_patient());
            
            
        }      
                
     */       } catch (SQLException ex) {
                Logger.getLogger(Espace_Admin.class.getName()).log(Level.SEVERE, null, ex);
            }
    }

    public JLabel getLabel_patient_national_code() {
        return label_patient_national_code;
    }

    public void setLabel_patient_national_code(JLabel label_patient_national_code) {
        this.label_patient_national_code = label_patient_national_code;
    }
    
public void choisir_spec(PreparedStatement psx ){
            try {
                    
                    rs = psx.executeQuery();
                    while (rs.next()) 
                    {                
                       d = new Doctor(rs.getString("employment_code"), rs.getString("last_name"), rs.getString("first_name"));
                       doctors.add(d);
                       cb_patient_choix_doct.addItem(d.display_infos_for_patient());
                    }  
             } 
            catch (SQLException ex) {
                        Logger.getLogger(Espace_Patient.class.getName()).log(Level.SEVERE, null, ex);
                    }
}
public void remove_all_doctors(){
                    cb_patient_choix_doct.removeAllItems();
                    cb_patient_choix_doct.addItem("Select...");
}    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jSpinner1 = new javax.swing.JSpinner();
        jSpinField1 = new com.toedter.components.JSpinField();
        jLabel1 = new javax.swing.JLabel();
        buttonGroup1 = new javax.swing.ButtonGroup();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        cb_patient_rdv = new javax.swing.JComboBox<>();
        panel_patient_rdv = new javax.swing.JPanel();
        jLabel50 = new javax.swing.JLabel();
        txt_patient_rdv = new com.toedter.calendar.JDateChooser();
        btn_patient_rdv_valider = new javax.swing.JButton();
        cb_patient_choix_doct = new javax.swing.JComboBox<>();
        jLabel51 = new javax.swing.JLabel();
        jLabel52 = new javax.swing.JLabel();
        rb_choix_spec_tout = new javax.swing.JRadioButton();
        rb_choix_spec_cardio = new javax.swing.JRadioButton();
        rb_choix_spec_pneumo = new javax.swing.JRadioButton();
        rb_choix_spec_neuro = new javax.swing.JRadioButton();
        rb_choix_spec_ophtalmo = new javax.swing.JRadioButton();
        jLabel53 = new javax.swing.JLabel();
        label_patient_national_code = new javax.swing.JLabel();

        jLabel1.setText("jLabel1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTabbedPane1.setBackground(new java.awt.Color(255, 255, 204));

        jPanel1.setBackground(new java.awt.Color(204, 255, 204));

        cb_patient_rdv.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select...", "Prendre un RDV", "Annuler un RDV" }));
        cb_patient_rdv.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cb_patient_rdvActionPerformed(evt);
            }
        });

        jLabel50.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel50.setText("Choisir une date :");

        btn_patient_rdv_valider.setFont(new java.awt.Font("Century", 1, 12)); // NOI18N
        btn_patient_rdv_valider.setText("Valider");
        btn_patient_rdv_valider.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_patient_rdv_validerActionPerformed(evt);
            }
        });

        cb_patient_choix_doct.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select..." }));
        cb_patient_choix_doct.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cb_patient_choix_doctActionPerformed(evt);
            }
        });

        jLabel51.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel51.setText("Choisir un docteur :");

        jLabel52.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel52.setText("Choisir la spécialité :");

        buttonGroup1.add(rb_choix_spec_tout);
        rb_choix_spec_tout.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        rb_choix_spec_tout.setText("Tout");
        rb_choix_spec_tout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rb_choix_spec_toutActionPerformed(evt);
            }
        });

        buttonGroup1.add(rb_choix_spec_cardio);
        rb_choix_spec_cardio.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        rb_choix_spec_cardio.setText("Cardiologue");
        rb_choix_spec_cardio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rb_choix_spec_cardioActionPerformed(evt);
            }
        });

        buttonGroup1.add(rb_choix_spec_pneumo);
        rb_choix_spec_pneumo.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        rb_choix_spec_pneumo.setText("Pneumologue");
        rb_choix_spec_pneumo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rb_choix_spec_pneumoActionPerformed(evt);
            }
        });

        buttonGroup1.add(rb_choix_spec_neuro);
        rb_choix_spec_neuro.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        rb_choix_spec_neuro.setText("Neurologue");
        rb_choix_spec_neuro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rb_choix_spec_neuroActionPerformed(evt);
            }
        });

        buttonGroup1.add(rb_choix_spec_ophtalmo);
        rb_choix_spec_ophtalmo.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        rb_choix_spec_ophtalmo.setText("Ophtalmologue");
        rb_choix_spec_ophtalmo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rb_choix_spec_ophtalmoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panel_patient_rdvLayout = new javax.swing.GroupLayout(panel_patient_rdv);
        panel_patient_rdv.setLayout(panel_patient_rdvLayout);
        panel_patient_rdvLayout.setHorizontalGroup(
            panel_patient_rdvLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panel_patient_rdvLayout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(panel_patient_rdvLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panel_patient_rdvLayout.createSequentialGroup()
                        .addGap(125, 125, 125)
                        .addComponent(btn_patient_rdv_valider, javax.swing.GroupLayout.PREFERRED_SIZE, 318, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(356, 356, 356))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panel_patient_rdvLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(panel_patient_rdvLayout.createSequentialGroup()
                            .addGap(3, 3, 3)
                            .addComponent(jLabel50, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGap(628, 628, 628))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panel_patient_rdvLayout.createSequentialGroup()
                            .addGroup(panel_patient_rdvLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panel_patient_rdvLayout.createSequentialGroup()
                                    .addComponent(jLabel52, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addGap(42, 42, 42)
                                    .addComponent(rb_choix_spec_tout)
                                    .addGap(18, 18, 18)
                                    .addGroup(panel_patient_rdvLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(rb_choix_spec_pneumo)
                                        .addComponent(rb_choix_spec_neuro))
                                    .addGap(18, 18, 18)
                                    .addGroup(panel_patient_rdvLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(rb_choix_spec_ophtalmo)
                                        .addComponent(rb_choix_spec_cardio)))
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panel_patient_rdvLayout.createSequentialGroup()
                                    .addComponent(jLabel51, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(cb_patient_choix_doct, javax.swing.GroupLayout.PREFERRED_SIZE, 299, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGap(357, 357, 357))
                        .addGroup(panel_patient_rdvLayout.createSequentialGroup()
                            .addGap(190, 190, 190)
                            .addComponent(txt_patient_rdv, javax.swing.GroupLayout.PREFERRED_SIZE, 330, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addContainerGap()))))
        );
        panel_patient_rdvLayout.setVerticalGroup(
            panel_patient_rdvLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_patient_rdvLayout.createSequentialGroup()
                .addGroup(panel_patient_rdvLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panel_patient_rdvLayout.createSequentialGroup()
                        .addGap(61, 61, 61)
                        .addComponent(jLabel52, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(panel_patient_rdvLayout.createSequentialGroup()
                        .addGap(41, 41, 41)
                        .addGroup(panel_patient_rdvLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panel_patient_rdvLayout.createSequentialGroup()
                                .addComponent(rb_choix_spec_pneumo)
                                .addGap(18, 18, 18)
                                .addComponent(rb_choix_spec_neuro))
                            .addGroup(panel_patient_rdvLayout.createSequentialGroup()
                                .addGap(19, 19, 19)
                                .addComponent(rb_choix_spec_tout))
                            .addGroup(panel_patient_rdvLayout.createSequentialGroup()
                                .addComponent(rb_choix_spec_cardio)
                                .addGap(18, 18, 18)
                                .addComponent(rb_choix_spec_ophtalmo)))))
                .addGap(18, 18, 18)
                .addGroup(panel_patient_rdvLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel51, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cb_patient_choix_doct, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addGroup(panel_patient_rdvLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel50, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt_patient_rdv, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addComponent(btn_patient_rdv_valider)
                .addContainerGap(43, Short.MAX_VALUE))
        );

        jLabel53.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel53.setText("Patient National Code :");

        label_patient_national_code.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        label_patient_national_code.setText("-");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(111, 111, 111)
                        .addComponent(cb_patient_rdv, javax.swing.GroupLayout.PREFERRED_SIZE, 452, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(32, 32, 32)
                        .addComponent(panel_patient_rdv, javax.swing.GroupLayout.PREFERRED_SIZE, 560, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(59, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel53, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(label_patient_national_code, javax.swing.GroupLayout.PREFERRED_SIZE, 274, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(125, 125, 125))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel53, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(label_patient_national_code, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(34, 34, 34)
                .addComponent(cb_patient_rdv, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addComponent(panel_patient_rdv, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(100, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("RDV", jPanel1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 656, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(502, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 550, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(114, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cb_patient_rdvActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cb_patient_rdvActionPerformed
        // TODO add your handling code here:
        switch(cb_patient_rdv.getSelectedIndex()){
            case 1 :
                panel_patient_rdv.setVisible(true);
        }
        
    }//GEN-LAST:event_cb_patient_rdvActionPerformed

    private void cb_patient_choix_doctActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cb_patient_choix_doctActionPerformed

    }//GEN-LAST:event_cb_patient_choix_doctActionPerformed

    private void btn_patient_rdv_validerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_patient_rdv_validerActionPerformed
        // TODO add your handling code here:
        
        if(!txt_patient_rdv.getDate().equals(null)){
            try {
                ps = cnx.prepareStatement("SELECT num_rdv FROM RDV");
                ResultSet rs_count = ps.executeQuery();
                rdv=0;
                do {
                    rdv++;
                }while (rs_count.next());
                
                ps = cnx.prepareStatement("INSERT INTO RDV(num_rdv,national_code,employment_code,date) VALUES(? ,?,?,?)");
                ps.setString(1, String.valueOf(rdv));
                
                for(int i=0;i<doctors.size();i++){
                    if(cb_patient_choix_doct.getSelectedItem()== doctors.get(i)){
                        d = doctors.get(i);
                        rdv += 1;
                        break;
                    }
                }
                Login_Interface li = new Login_Interface();
                ps.setString(2,label_patient_national_code.getText());
                ps.setString(3, d.getEmployment_code());
                ps.setString(4, DateFormat.getDateInstance().format(txt_patient_rdv.getDate()));
                ps.execute();
                JOptionPane.showMessageDialog(this, "RDV pris avec succès !");
            }
            catch (SQLException ex) {
                Logger.getLogger(Espace_Patient.class.getName()).log(Level.SEVERE, null, ex);
                JOptionPane.showMessageDialog(this, "Error ! Please choose a validate date !");
            }
        }
        else JOptionPane.showMessageDialog(this, "Error ! Please choose a validate date !");
    }//GEN-LAST:event_btn_patient_rdv_validerActionPerformed

    private void rb_choix_spec_pneumoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rb_choix_spec_pneumoActionPerformed
        // TODO add your handling code here:
         remove_all_doctors();
            try {
                ps = cnx.prepareStatement("SELECT employment_code , last_name, first_name FROM DOCTOR d, USER u where d.national_code=u.national_code and d.speciality =?" );
                ps.setString(1, rb_choix_spec_pneumo.getText());
                choisir_spec(ps);
            } 
            catch (SQLException ex) {
                Logger.getLogger(Espace_Patient.class.getName()).log(Level.SEVERE, null, ex);
                JOptionPane.showMessageDialog(this, "ERREUR !");
            }
    }//GEN-LAST:event_rb_choix_spec_pneumoActionPerformed

    private void rb_choix_spec_neuroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rb_choix_spec_neuroActionPerformed
        // TODO add your handling code here:
                 remove_all_doctors();
            try {
                ps = cnx.prepareStatement("SELECT employment_code , last_name, first_name FROM DOCTOR d, USER u where d.national_code=u.national_code and d.speciality =?" );
                ps.setString(1, rb_choix_spec_neuro.getText());
                choisir_spec(ps);
            } 
            catch (SQLException ex) {
                Logger.getLogger(Espace_Patient.class.getName()).log(Level.SEVERE, null, ex);
                JOptionPane.showMessageDialog(this, "ERREUR !");
            }
    }//GEN-LAST:event_rb_choix_spec_neuroActionPerformed

    private void rb_choix_spec_toutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rb_choix_spec_toutActionPerformed
        // TODO add your handling code here:
                    remove_all_doctors();
                    try {
                        ps = cnx.prepareStatement("SELECT employment_code , last_name, first_name FROM DOCTOR d, USER u where d.national_code=u.national_code");
                        choisir_spec(ps);
                    } 
                    catch (SQLException ex) {
                        Logger.getLogger(Espace_Patient.class.getName()).log(Level.SEVERE, null, ex);
                        JOptionPane.showMessageDialog(this, "ERREUR !");
                    }

    }//GEN-LAST:event_rb_choix_spec_toutActionPerformed

    private void rb_choix_spec_cardioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rb_choix_spec_cardioActionPerformed
        // TODO add your handling code here:
                remove_all_doctors();
            try {
                ps = cnx.prepareStatement("SELECT employment_code , last_name, first_name FROM DOCTOR d, USER u where d.national_code=u.national_code and d.speciality =?" );
                ps.setString(1, rb_choix_spec_cardio.getText());
                choisir_spec(ps);
            } 
            catch (SQLException ex) {
                Logger.getLogger(Espace_Patient.class.getName()).log(Level.SEVERE, null, ex);
                JOptionPane.showMessageDialog(this, "ERREUR !");
            }

    }//GEN-LAST:event_rb_choix_spec_cardioActionPerformed

    private void rb_choix_spec_ophtalmoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rb_choix_spec_ophtalmoActionPerformed
        // TODO add your handling code here:
                 remove_all_doctors();
            try {
                ps = cnx.prepareStatement("SELECT employment_code , last_name, first_name FROM DOCTOR d, USER u where d.national_code=u.national_code and d.speciality =?" );
                ps.setString(1, rb_choix_spec_ophtalmo.getText());
                choisir_spec(ps);
            } 
            catch (SQLException ex) {
                Logger.getLogger(Espace_Patient.class.getName()).log(Level.SEVERE, null, ex);
                JOptionPane.showMessageDialog(this, "ERREUR !");
            }
    }//GEN-LAST:event_rb_choix_spec_ophtalmoActionPerformed
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Espace_Patient.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Espace_Patient.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Espace_Patient.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Espace_Patient.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Espace_Patient().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_patient_rdv_valider;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JComboBox<String> cb_patient_choix_doct;
    private javax.swing.JComboBox<String> cb_patient_rdv;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel50;
    private javax.swing.JLabel jLabel51;
    private javax.swing.JLabel jLabel52;
    private javax.swing.JLabel jLabel53;
    private javax.swing.JPanel jPanel1;
    private com.toedter.components.JSpinField jSpinField1;
    private javax.swing.JSpinner jSpinner1;
    private javax.swing.JTabbedPane jTabbedPane1;
    public javax.swing.JLabel label_patient_national_code;
    private javax.swing.JPanel panel_patient_rdv;
    private javax.swing.JRadioButton rb_choix_spec_cardio;
    private javax.swing.JRadioButton rb_choix_spec_neuro;
    private javax.swing.JRadioButton rb_choix_spec_ophtalmo;
    private javax.swing.JRadioButton rb_choix_spec_pneumo;
    private javax.swing.JRadioButton rb_choix_spec_tout;
    private com.toedter.calendar.JDateChooser txt_patient_rdv;
    // End of variables declaration//GEN-END:variables
}
